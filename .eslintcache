[{"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AppRouter.js":"1","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\RegisterScreen.js":"2","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\LoginScreen.js":"3","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\MainRouter.js":"4","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Contacts.js":"5","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AuthRouter.js":"6","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\Navbar.js":"7","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\ChatPage.js":"8","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Info.js":"9","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Chat.js":"10","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\SmsApp.js":"11","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\index.js":"12","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\ContactsContext.js":"13","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsReducer.js":"14","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\service\\contactsService.js":"15","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsTypes.js":"16","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Notes.js":"17","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\UsersPage.js":"18","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Customers.js":"19","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Options.js":"20","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\SearchContacts.js":"21","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Templates.js":"22","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Area.js":"23","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\MessagePage.js":"24","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\AdminPage.js":"25","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Table.js":"26","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Panel.js":"27","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddUser.js":"28","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\scrollToBottom.js":"29","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\SlidePanel.js":"30","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Messages.js":"31","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendMessage.js":"32","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\CreateTeam.js":"33","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTeamContact.js":"34","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\RemoveTeamContact.js":"35","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthContext.js":"36","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\fetch.js":"37","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PublicRoute.js":"38","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTemplate.js":"39","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PrivateRoute.js":"40","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\groups\\GroupsPage.js":"41","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddGroup.js":"42","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\EditGroup.js":"43","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendTemplate.js":"44","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Media.js":"45","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Groups.js":"46","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthReducer.js":"47","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddClient.js":"48","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\ChangeRole.js":"49","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\NumberMessage.js":"50"},{"size":1142,"mtime":1616223513289,"results":"51","hashOfConfig":"52"},{"size":1101,"mtime":1611261234728,"results":"53","hashOfConfig":"52"},{"size":3142,"mtime":1616388654947,"results":"54","hashOfConfig":"52"},{"size":2011,"mtime":1616220350798,"results":"55","hashOfConfig":"52"},{"size":3408,"mtime":1619151915784,"results":"56","hashOfConfig":"52"},{"size":599,"mtime":1611260475175,"results":"57","hashOfConfig":"52"},{"size":1746,"mtime":1613108102929,"results":"58","hashOfConfig":"52"},{"size":322,"mtime":1611409877334,"results":"59","hashOfConfig":"52"},{"size":3674,"mtime":1616390652022,"results":"60","hashOfConfig":"52"},{"size":4359,"mtime":1618893332561,"results":"61","hashOfConfig":"52"},{"size":177,"mtime":1611401771760,"results":"62","hashOfConfig":"52"},{"size":549,"mtime":1612654831568,"results":"63","hashOfConfig":"52"},{"size":743,"mtime":1616988182461,"results":"64","hashOfConfig":"52"},{"size":6896,"mtime":1619410773703,"results":"65","hashOfConfig":"52"},{"size":57427,"mtime":1613887727083,"results":"66","hashOfConfig":"52"},{"size":1398,"mtime":1616994809738,"results":"67","hashOfConfig":"52"},{"size":3509,"mtime":1612058095988,"results":"68","hashOfConfig":"52"},{"size":341,"mtime":1611411246134,"results":"69","hashOfConfig":"52"},{"size":1644,"mtime":1611414232783,"results":"70","hashOfConfig":"52"},{"size":1282,"mtime":1611415700052,"results":"71","hashOfConfig":"52"},{"size":3530,"mtime":1614377562369,"results":"72","hashOfConfig":"52"},{"size":963,"mtime":1613118117226,"results":"73","hashOfConfig":"52"},{"size":841,"mtime":1613102260254,"results":"74","hashOfConfig":"52"},{"size":361,"mtime":1611419237337,"results":"75","hashOfConfig":"52"},{"size":385,"mtime":1611438521330,"results":"76","hashOfConfig":"52"},{"size":7030,"mtime":1619155714419,"results":"77","hashOfConfig":"52"},{"size":2945,"mtime":1619153352436,"results":"78","hashOfConfig":"52"},{"size":3107,"mtime":1619155480910,"results":"79","hashOfConfig":"52"},{"size":313,"mtime":1611448837321,"results":"80","hashOfConfig":"52"},{"size":1792,"mtime":1616219235938,"results":"81","hashOfConfig":"52"},{"size":6810,"mtime":1618892223284,"results":"82","hashOfConfig":"52"},{"size":3736,"mtime":1614377944303,"results":"83","hashOfConfig":"52"},{"size":4711,"mtime":1619154548785,"results":"84","hashOfConfig":"52"},{"size":5040,"mtime":1612501401410,"results":"85","hashOfConfig":"52"},{"size":5216,"mtime":1612501941800,"results":"86","hashOfConfig":"52"},{"size":480,"mtime":1616223253145,"results":"87","hashOfConfig":"52"},{"size":1194,"mtime":1612654630954,"results":"88","hashOfConfig":"52"},{"size":335,"mtime":1616223476907,"results":"89","hashOfConfig":"52"},{"size":2261,"mtime":1613102860803,"results":"90","hashOfConfig":"52"},{"size":335,"mtime":1616221016803,"results":"91","hashOfConfig":"52"},{"size":2701,"mtime":1613866475498,"results":"92","hashOfConfig":"52"},{"size":4518,"mtime":1613114650836,"results":"93","hashOfConfig":"52"},{"size":4453,"mtime":1613117765909,"results":"94","hashOfConfig":"52"},{"size":4972,"mtime":1614377824773,"results":"95","hashOfConfig":"52"},{"size":2557,"mtime":1616726882730,"results":"96","hashOfConfig":"52"},{"size":820,"mtime":1616048081678,"results":"97","hashOfConfig":"52"},{"size":275,"mtime":1616223171191,"results":"98","hashOfConfig":"52"},{"size":3320,"mtime":1619155859043,"results":"99","hashOfConfig":"52"},{"size":2770,"mtime":1619410845421,"results":"100","hashOfConfig":"52"},{"size":1427,"mtime":1619340748996,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"1ocq74j",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"123"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"111"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"123"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"123"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"163"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AppRouter.js",["234","235","236"],"import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth/AuthContext\";\r\nimport { ContactsContext } from \"../context/ContactsContext\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { MainRouter } from \"./MainRouter\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const { authState } = useContext(AuthContext);\r\n  console.log(authState);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          {/* <PrivateRoute\r\n            isAuthenticated={authState.logged}\r\n            exact\r\n            path=\"/\"\r\n            component={MainRouter}\r\n          />\r\n          <PublicRoute\r\n            isAuthenticated={authState.logged}\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n          /> */}\r\n          <Route path=\"/auth\" component={AuthRouter} />\r\n          <Route path=\"/\" component={MainRouter} />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n",["237","238"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\RegisterScreen.js",[],["239","240"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\LoginScreen.js",[],["241","242"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\MainRouter.js",["243","244","245"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Contacts.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AuthRouter.js",[],["246","247"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\Navbar.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\ChatPage.js",[],["248","249"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Info.js",[],["250","251"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Chat.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\SmsApp.js",[],["252","253"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\index.js",[],["254","255"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\ContactsContext.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsReducer.js",["256"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\service\\contactsService.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsTypes.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Notes.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\UsersPage.js",[],["257","258"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Customers.js",[],["259","260"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Options.js",[],["261","262"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\SearchContacts.js",["263","264"],"import React, { useContext, useState } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const SearchContacts = () => {\r\n  const { dispatch, contactsState } = useContext(ContactsContext);\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const { contacts, activeContact, templates, activeTemplate } = contactsState;\r\n  const [useContacts, setUseContacts] = useState(contacts);\r\n  const [sendTo, setSendTo] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  const addContact = (idx) => {\r\n    setSendTo([...sendTo, useContacts[idx]]);\r\n    setUseContacts(useContacts.filter((_, id) => id !== idx));\r\n  };\r\n\r\n  const removeContact = (idx) => {\r\n    setUseContacts([...useContacts, sendTo[idx]]);\r\n    setSendTo(sendTo.filter((_, id) => id !== idx));\r\n  };\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    sendTo.map(({ _id }) => {\r\n      dispatch({\r\n        type: types.updateUnreaded,\r\n        payload: { id: _id, value: 1 },\r\n      });\r\n\r\n      dispatch({\r\n        type: types.addMultiMessages,\r\n        payload: {\r\n          id: _id,\r\n          message: {\r\n            origin: \"from\",\r\n            message: templates[activeTemplate].message,\r\n            date: new Date().toString(),\r\n          },\r\n        },\r\n      });\r\n    });\r\n\r\n    addToast(\r\n      `Message '${templates[activeTemplate].message}' was send successfully.`,\r\n      {\r\n        appearance: \"info\",\r\n      }\r\n    );\r\n\r\n    setUseContacts([...useContacts, ...sendTo]);\r\n    setSendTo([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"message__contact\">\r\n      <button>Edit Template</button>\r\n      <button>Delete Template</button>\r\n\r\n      <label>Send your SMS here! Search your contact</label>\r\n      <input onChange={searchContact} type=\"text\" placeholder=\"Search...\" />\r\n\r\n      <div className=\"message__container scroll\">\r\n        {useContacts.map(\r\n          (contact, idx) =>\r\n            contact.name\r\n              .toLowerCase()\r\n              .includes(searchContacts.toLowerCase()) && (\r\n              <div key={idx} className=\"message__badge\">\r\n                <div className=\"b-shadow message__name\">\r\n                  <img\r\n                    className=\"circle-img\"\r\n                    src=\"https://picsum.photos/200/200\"\r\n                    alt=\"\"\r\n                  />\r\n                  <span>{contact.name}</span>\r\n                </div>\r\n\r\n                <i\r\n                  onClick={() => addContact(idx)}\r\n                  className=\"b-shadow fas fa-paper-plane\"\r\n                ></i>\r\n              </div>\r\n            )\r\n        )}\r\n      </div>\r\n      <hr />\r\n\r\n      <h3>Send message to...</h3>\r\n      <div className=\"message__container-secondary scroll b-shadow\">\r\n        {sendTo.map((contact, idx) => (\r\n          <div key={idx} className=\"message__badge\">\r\n            <div className=\"message__name\">\r\n              <img\r\n                className=\"circle-img\"\r\n                src=\"https://picsum.photos/200/200\"\r\n                alt=\"\"\r\n              />\r\n              <span>{contact.name}</span>\r\n              <i\r\n                onClick={() => removeContact(idx)}\r\n                className=\" fa fa-times\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={sendMessage}>Use Template</button>\r\n    </div>\r\n  );\r\n};\r\n",["265","266"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Templates.js",[],["267","268"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Area.js",[],["269","270"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\MessagePage.js",[],["271","272"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\AdminPage.js",[],["273","274"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Table.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Panel.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddUser.js",["275","276"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\nimport sid from \"shortid\";\r\n\r\nexport const AddUser = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { dispatch } = useContext(ContactsContext);\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (\r\n      data.name &&\r\n      data.email &&\r\n      data.phone &&\r\n      data.role !== \"Select one option...\"\r\n    ) {\r\n      dispatch({\r\n        type: types.addContacts,\r\n        payload: [\r\n          {\r\n            _id: sid.generate(),\r\n            teams: [{ name: \"contacts\", phone: 5500000000 }],\r\n            notes: [],\r\n            unreaded: 0,\r\n            messages: [],\r\n            ...data,\r\n          },\r\n        ],\r\n      });\r\n\r\n      addToast(`User '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(`You need to fill all inputs if you want create a new user.`, {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-user\">\r\n          <h4>Add User</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name user...\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Email</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"test@test.com\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Phone</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder=\"+ 52 00 0000 0000\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Role</label>\r\n              <select ref={register({ required: true })} name=\"role\">\r\n                <option>Select one option...</option>\r\n                <option value=\"client\">Client</option>\r\n                <option value=\"admin\">Admin</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\scrollToBottom.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\SlidePanel.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Messages.js",["277"],"import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { scrollToBottom } from \"../../helpers/scrollToBottom\";\r\n\r\nimport ModalImage from \"react-modal-image\";\r\n\r\nimport * as fns from \"date-fns\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const Messages = (props) => {\r\n  const { dispatchFiles } = props;\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { activeContact, activeTeam, teamsMessages } = contactsState;\r\n  const [mouseOver, setMouseOver] = useState(false);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    dispatchFiles(acceptedFiles);\r\n  }, []);\r\n\r\n  const { getRootProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const pendingMessage = (date) => {\r\n    if (fns.isBefore(Date.parse(date), fns.endOfYesterday())) {\r\n      return false;\r\n    } else {\r\n      if (\r\n        fns.isAfter(Date.parse(date), fns.addHours(fns.startOfToday(), 8)) &&\r\n        fns.isBefore(Date.parse(date), fns.addHours(fns.startOfToday(), 20))\r\n      ) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const distanceFormat = (date) => {\r\n    if (fns.isAfter(Date.parse(date), fns.addHours(fns.startOfToday(), 20))) {\r\n      return fns.formatDistance(\r\n        fns.addHours(fns.startOfTomorrow(), 8),\r\n        Date.parse(date)\r\n      );\r\n    } else {\r\n      return fns.formatDistance(\r\n        fns.addHours(fns.startOfToday(), 8),\r\n        Date.parse(date)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom(\"messages\");\r\n  }, [isDragActive]);\r\n\r\n  return (\r\n    <div\r\n      id=\"divToPrint\"\r\n      className=\"messages__messages scroll b-shadow\"\r\n      {...getRootProps()}\r\n    >\r\n      {activeTeam.name !== \"contacts\"\r\n        ? teamsMessages[activeTeam.name].map(\r\n            ({ origin, message, date, file }, idx) =>\r\n              message.length !== 0 ? (\r\n                <>\r\n                  {pendingMessage(date) && (\r\n                    <>\r\n                      <span\r\n                        data-tip\r\n                        data-for=\"pending\"\r\n                        className={`pending span__${\r\n                          origin === \"from\" ? \"from\" : \"to\"\r\n                        }`}\r\n                        onMouseOver={() => setMouseOver(true)}\r\n                        onMouseLeave={() => setMouseOver(false)}\r\n                        onClick={() =>\r\n                          dispatch({\r\n                            type: types.removeMessage,\r\n                            payload: { origin, date, message, file },\r\n                          })\r\n                        }\r\n                      >\r\n                        {mouseOver ? (\r\n                          <>\r\n                            Cancel <i className=\"fas fa-times\"></i>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            Pending Message{\" \"}\r\n                            <i className=\"fas fa-info-circle\"></i>\r\n                          </>\r\n                        )}\r\n                      </span>\r\n                      <ReactTooltip id=\"pending\" type=\"warning\" effect=\"solid\">\r\n                        <span>{distanceFormat(date)}</span>\r\n                      </ReactTooltip>\r\n                    </>\r\n                  )}\r\n                  <p\r\n                    key={idx}\r\n                    className={`message__${origin === \"from\" ? \"from\" : \"to\"}`}\r\n                  >\r\n                    {message}\r\n                  </p>\r\n                  <span\r\n                    className={`span__${origin === \"from\" ? \"from\" : \"to\"}`}\r\n                  >\r\n                    {`${fns.format(\r\n                      Date.parse(date),\r\n                      `EEE MMM d p`\r\n                    )}  -  ${activeTeam.name.toUpperCase()} - ${\r\n                      activeContact.phone\r\n                    }`}\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <ModalImage\r\n                  small={URL.createObjectURL(file)}\r\n                  large={URL.createObjectURL(file)}\r\n                  alt={file.name}\r\n                />\r\n              )\r\n          )\r\n        : activeContact.messages.map(({ origin, message, date, file }, idx) =>\r\n            message.length !== 0 ? (\r\n              <>\r\n                {pendingMessage(date) && (\r\n                  <>\r\n                    <span\r\n                      data-tip\r\n                      data-for=\"pending\"\r\n                      className={`pending span__${\r\n                        origin === \"from\" ? \"from\" : \"to\"\r\n                      }`}\r\n                      onMouseOver={() => setMouseOver(true)}\r\n                      onMouseLeave={() => setMouseOver(false)}\r\n                      onClick={() =>\r\n                        dispatch({\r\n                          type: types.removeMessage,\r\n                          payload: { origin, date, message, file },\r\n                        })\r\n                      }\r\n                    >\r\n                      {mouseOver ? (\r\n                        <>\r\n                          Cancel <i className=\"fas fa-times\"></i>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          Pending Message <i className=\"fas fa-info-circle\"></i>\r\n                        </>\r\n                      )}\r\n                    </span>\r\n                    <ReactTooltip id=\"pending\" type=\"warning\" effect=\"solid\">\r\n                      <span>{distanceFormat(date)}</span>\r\n                    </ReactTooltip>\r\n                  </>\r\n                )}\r\n                <p\r\n                  key={idx}\r\n                  className={`message__${origin === \"from\" ? \"from\" : \"to\"}`}\r\n                >\r\n                  {message}\r\n                </p>\r\n                <span className={`span__${origin === \"from\" ? \"from\" : \"to\"}`}>\r\n                  {`${fns.format(\r\n                    Date.parse(date),\r\n                    `EEE MMM d p`\r\n                  )}  - ${activeTeam.name.toUpperCase()} - ${\r\n                    activeContact.phone\r\n                  }`}\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <ModalImage\r\n                small={URL.createObjectURL(file)}\r\n                large={URL.createObjectURL(file)}\r\n                alt={file.name}\r\n                className={`img__${origin === \"from\" ? \"from\" : \"to\"}`}\r\n              />\r\n            )\r\n          )}\r\n\r\n      <div className=\"messages__drop-zone\">\r\n        {isDragActive && <p className=\"drag\">Drop the files here ...</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendMessage.js",["278","279","280","281"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\nimport { scrollToBottomAnimated } from \"../../helpers/scrollToBottom\";\r\n\r\nexport const SendMessage = ({ trigger }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, activeContact } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearch(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const onChange = ({ target }) => setMessage(target.value);\r\n\r\n  const sendMessage = () => {\r\n    if (message.length > 0 && sltdContacts.length > 0) {\r\n      sltdContacts.map((id) => {\r\n        dispatch({\r\n          type: types.updateUnreaded,\r\n          payload: { id, value: 1 },\r\n        });\r\n\r\n        dispatch({\r\n          type: types.addMultiMessages,\r\n          payload: {\r\n            id,\r\n            message: { origin: \"from\", message, date: new Date().toString() },\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`Message '${message}' was sended successfully.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      setMessage(\"\");\r\n      setSltdContacts([]);\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to write something and select a contact if you want to send a message.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__send-message\">\r\n          <h4>Send Message</h4>\r\n\r\n          <textarea\r\n            onChange={onChange}\r\n            value={message}\r\n            className=\"b-shadow\"\r\n            placeholder=\"Write your message...\"\r\n          ></textarea>\r\n\r\n          <div className=\"popup__contacts\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={search}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  contact.name.toLowerCase().includes(search.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() =>\r\n                        selected(sltdContacts, setSltdContacts, contact._id)\r\n                      }\r\n                      className={`b-shadow ${\r\n                        selectedClass(contact._id, sltdContacts) &&\r\n                        \"popup__send-message-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <span>{contact.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={sendMessage}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\CreateTeam.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTeamContact.js",["282","283"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const AddTeamContact = ({ trigger }) => {\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const [searchTeams, setSearchTeams] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, teams } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [sltdTeams, setSltdTeams] = useState([]);\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const searchTeam = ({ target }) => {\r\n    setSearchTeams(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const addTeamContacts = () => {\r\n    if (sltdContacts.length > 0 && sltdTeams.length > 0) {\r\n      sltdContacts.map((id) => {\r\n        dispatch({\r\n          type: types.addMultiTeamContacts,\r\n          payload: {\r\n            _id: id,\r\n            teams: sltdTeams,\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`User(s) added successfully to there teams.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      setSltdContacts([]);\r\n      setSltdTeams([]);\r\n      setSearchContacts(\"\");\r\n      setSearchTeams(\"\");\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to select one or more contacts and teams to confirm.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-contact\">\r\n          <h4>Add Team Contact</h4>\r\n\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={searchContacts}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Contacts</label>\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  contact.name\r\n                    .toLowerCase()\r\n                    .includes(searchContacts.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() =>\r\n                        selected(sltdContacts, setSltdContacts, contact._id)\r\n                      }\r\n                      className={`b-shadow ${\r\n                        selectedClass(contact._id, sltdContacts) &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <div>\r\n                        <span>{contact.name}</span>\r\n                        <div className=\"popup_add-contact-teams\">\r\n                          {contact.teams.map(\r\n                            (team, idx) =>\r\n                              team.name !== \"contacts\" && (\r\n                                <span key={idx}>{team.name}</span>\r\n                              )\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchTeam}\r\n              value={searchTeams}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Teams</label>\r\n            <ul className=\"scroll\">\r\n              {teams.map(\r\n                (team, idx) =>\r\n                  team.name !== \"contacts\" &&\r\n                  team.name\r\n                    .toLowerCase()\r\n                    .includes(searchTeams.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() => selected(sltdTeams, setSltdTeams, team)}\r\n                      className={`b-shadow ${\r\n                        selectedClass(team, sltdTeams) &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <span>{team.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={addTeamContacts}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\RemoveTeamContact.js",["284","285"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthContext.js",["286"],"import React, { createContext, useReducer, useState } from \"react\";\nimport { authReducer } from \"./AuthReducer\";\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n  logged: false,\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, dispatch] = useReducer(authReducer, initialState);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authState,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\fetch.js",[],["287","288"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PublicRoute.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTemplate.js",["289","290","291"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const AddTemplate = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { dispatch } = useContext(ContactsContext);\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.name && data.message) {\r\n      dispatch({\r\n        type: types.addTemplate,\r\n        payload: {\r\n          name: data.name,\r\n          message: eval(\"`\" + data.message + \"`\"),\r\n        },\r\n      });\r\n\r\n      addToast(`Template '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to fill all inputs if you want create a new template.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-user\">\r\n          <h4>Add Template</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Template Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Template name...\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Message</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"message\"\r\n                placeholder=\"Hello, how are you?...\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\groups\\GroupsPage.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddGroup.js",["292","293"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const AddGroup = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const { dispatch, contactsState } = useContext(ContactsContext);\r\n  const { contacts } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.name && data.desc) {\r\n      dispatch({\r\n        type: types.addGroup,\r\n        payload: {\r\n          name: data.name,\r\n          desc: data.desc,\r\n          contacts: [...sltdContacts],\r\n        },\r\n      });\r\n\r\n      addToast(`Group '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      setSltdContacts([]);\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to fill all inputs if you want create a new template.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__group\">\r\n          <h4>Add Group</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Group Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Group name...\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Description</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"desc\"\r\n                placeholder=\"This group is...\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"popup__group-contacts\">\r\n              <input\r\n                onChange={searchContact}\r\n                value={searchContacts}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n              />\r\n\r\n              <ul className=\"scroll\">\r\n                {contacts.map(\r\n                  (contact, idx) =>\r\n                    contact.name\r\n                      .toLowerCase()\r\n                      .includes(searchContacts.toLowerCase()) && (\r\n                      <li\r\n                        onClick={() =>\r\n                          selected(sltdContacts, setSltdContacts, contact._id)\r\n                        }\r\n                        className={`b-shadow ${\r\n                          selectedClass(contact._id, sltdContacts) &&\r\n                          \"popup__add-team-selected\"\r\n                        }`}\r\n                        key={idx}\r\n                      >\r\n                        <img\r\n                          className=\"circle-img\"\r\n                          src=\"https://picsum.photos/200/200\"\r\n                        />\r\n                        <div>\r\n                          <span>{contact.name}</span>\r\n                          <div className=\"popup_add-contact-teams\">\r\n                            {contact.teams.map(\r\n                              (team, idx) =>\r\n                                team.name !== \"contacts\" && (\r\n                                  <span key={idx}>{team.name}</span>\r\n                                )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                )}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\EditGroup.js",["294"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const EditGroup = ({ trigger, group }) => {\r\n  const { addToast } = useToasts();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const { dispatch, contactsState } = useContext(ContactsContext);\r\n  const { groups, contacts } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.name && data.desc) {\r\n      dispatch({\r\n        type: types.editGroup,\r\n        payload: {\r\n          id: group,\r\n          name: data.name,\r\n          desc: data.desc,\r\n        },\r\n      });\r\n\r\n      addToast(`Group '${data.name}' was edited successfully.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to fill all inputs if you want create a new template.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const currentContact = (cond, array) => array.includes(cond);\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__group\">\r\n          <h4>Edit Group</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Group Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Group name...\"\r\n                defaultValue={groups[group].name}\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Description</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"desc\"\r\n                placeholder=\"This group is...\"\r\n                defaultValue={groups[group].desc}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"popup__group-contacts\">\r\n              <input\r\n                onChange={searchContact}\r\n                value={searchContacts}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n              />\r\n\r\n              <ul className=\"scroll\">\r\n                {contacts.map(\r\n                  (contact, idx) =>\r\n                    currentContact(contact._id, groups[group].contacts) &&\r\n                    contact.name\r\n                      .toLowerCase()\r\n                      .includes(searchContacts.toLowerCase()) && (\r\n                      <li\r\n                        onClick={() =>\r\n                          selected(sltdContacts, setSltdContacts, contact._id)\r\n                        }\r\n                        key={idx}\r\n                      >\r\n                        <img\r\n                          className=\"circle-img\"\r\n                          src=\"https://picsum.photos/200/200\"\r\n                        />\r\n                        <div>\r\n                          <span>{contact.name}</span>\r\n                          <div className=\"popup_add-contact-teams\">\r\n                            {contact.teams.map(\r\n                              (team, idx) =>\r\n                                team.name !== \"contacts\" && (\r\n                                  <span key={idx}>{team.name}</span>\r\n                                )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                )}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n",["295","296"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendTemplate.js",["297","298","299","300"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nimport * as R from \"ramda\";\r\n\r\nexport const SendTemplate = ({ trigger, group }) => {\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const [searchTemplates, setSearchTemplates] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, groups, activeContact, templates } = contactsState;\r\n  const [sltdTemplate, setSltdTemplate] = useState(templates[0]);\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const searchTemplate = ({ target }) => {\r\n    setSearchTemplates(target.value);\r\n  };\r\n\r\n  const sendTemplate = () => {\r\n    if (groups[group].contacts.length > 0) {\r\n      groups[group].contacts.map((id) => {\r\n        dispatch({\r\n          type: types.updateUnreaded,\r\n          payload: { id, value: 1 },\r\n        });\r\n\r\n        dispatch({\r\n          type: types.addMultiMessages,\r\n          payload: {\r\n            id,\r\n            message: {\r\n              origin: \"from\",\r\n              message: sltdTemplate.message,\r\n              date: new Date().toString(),\r\n            },\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`Message '${sltdTemplate.message}' was sended successfully.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to write something and select a contact if you want to send a message.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-contact\">\r\n          <h4>Send Template</h4>\r\n\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={searchContacts}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Group Contacts</label>\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  selectedClass(contact._id, groups[group].contacts) &&\r\n                  contact.name\r\n                    .toLowerCase()\r\n                    .includes(searchContacts.toLowerCase()) && (\r\n                    <li key={idx} className=\"b-shadow \">\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <div>\r\n                        <span>{contact.name}</span>\r\n                        <div className=\"popup_add-contact-teams\">\r\n                          {contact.teams.map(\r\n                            (team, idx) =>\r\n                              team.name !== \"contacts\" && (\r\n                                <span key={idx}>{team.name}</span>\r\n                              )\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchTemplate}\r\n              value={searchTemplates}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Templates</label>\r\n            <ul className=\"scroll\">\r\n              {templates.map(\r\n                (template, idx) =>\r\n                  template.name\r\n                    .toLowerCase()\r\n                    .includes(searchTemplates.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() => setSltdTemplate(template)}\r\n                      className={`b-shadow ${\r\n                        sltdTemplate.name === template.name &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      {console.log({\r\n                        name: template.name,\r\n                        prop: sltdTemplate.name,\r\n                      })}\r\n                      {console.log(sltdTemplate.name === template.name)}\r\n                      <span>{template.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={sendTemplate}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Media.js",["301"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useSaveFilesAsZip } from \"use-save-files-as-zip\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport ModalImage from \"react-modal-image\";\r\n\r\nimport * as R from \"ramda\";\r\n\r\nexport const Media = ({ trigger }) => {\r\n  const { contactsState } = useContext(ContactsContext);\r\n  const { activeContact } = contactsState;\r\n  const { setFilesAsZip, saveAsZip } = useSaveFilesAsZip();\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const ref = useRef();\r\n\r\n  const downloadAll = async () => {\r\n    const messagesFiles = await activeContact.messages.filter(\r\n      ({ message }, idx) => message.length === 0 && find(idx)\r\n    );\r\n\r\n    const files = await messagesFiles.map(({ file }) => file);\r\n    setFilesAsZip(files);\r\n    saveAsZip();\r\n  };\r\n\r\n  const find = R.includes(R.__, selected);\r\n\r\n  const addRemove = (idx) => {\r\n    if (find(idx)) {\r\n      setSelected([\r\n        ...selected.filter((_, id) => id !== R.indexOf(idx, selected)),\r\n      ]);\r\n    } else {\r\n      setSelected([...selected, idx]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__media\">\r\n          <h4>Media</h4>\r\n\r\n          <div className=\"media\">\r\n            {activeContact.messages.map(\r\n              ({ message, file }, idx) =>\r\n                message.length === 0 && (\r\n                  <div className=\"media__download b-shadow\">\r\n                    <ModalImage\r\n                      small={URL.createObjectURL(file)}\r\n                      large={URL.createObjectURL(file)}\r\n                      alt={file.name}\r\n                    />\r\n                    <a href={URL.createObjectURL(file)} download>\r\n                      <i className=\"fas fa-download\"></i>\r\n                    </a>\r\n                    <a onClick={() => addRemove(idx)}>\r\n                      {find(idx) ? (\r\n                        <i className=\"far fa-check-square\"></i>\r\n                      ) : (\r\n                        <i className=\"far fa-square\"></i>\r\n                      )}\r\n                    </a>\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={downloadAll}>\r\n              <i class=\"fas fa-download\"></i> Download All\r\n            </button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Groups.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthReducer.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddClient.js",["302","303"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\nimport sid from \"shortid\";\r\n\r\nexport const AddClient = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { dispatch } = useContext(ContactsContext);\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.phone) {\r\n      dispatch({\r\n        type: types.addClients,\r\n        payload: [\r\n          {\r\n            _id: sid.generate(),\r\n            teams: [{ name: \"clients\", phone: 5500000000 }],\r\n            notes: [],\r\n            unreaded: 0,\r\n            messages: [],\r\n            role: \"client\",\r\n            name: data.name ? data.name : \"No name\",\r\n            ...data,\r\n          },\r\n        ],\r\n      });\r\n\r\n      addToast(`Client '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(`You need to fill all inputs if you want create a new client.`, {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-user\">\r\n          <h4>Add Contact</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Name</label>\r\n              <input type=\"text\" name=\"name\" placeholder=\"Name user...\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Email</label>\r\n              <input type=\"email\" name=\"email\" placeholder=\"test@test.com\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Phone</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder=\"+ 52 00 0000 0000\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Birthday</label>\r\n              <input type=\"text\" name=\"birthday\" placeholder=\"12/31/1998\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                placeholder=\"Atizapan de Zaragoza, Las penitas, Coral #7\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Company</label>\r\n              <input type=\"text\" name=\"company\" placeholder=\"Microsoft\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Website</label>\r\n              <input type=\"text\" name=\"website\" placeholder=\"www.example.com\" />\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\ChangeRole.js",["304"],"import React, { useContext, useRef, useEffect, useState } from 'react';\r\n\r\nimport Popup from 'reactjs-popup';\r\nimport { ContactsContext } from '../../context/ContactsContext';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { types } from '../../context/contactsTypes';\r\n\r\nimport * as R from 'ramda';\r\n\r\nexport const ChangeRole = ({ trigger, clientIdx }) => {\r\n\tconst { addToast } = useToasts();\r\n\tconst { contactsState, dispatch } = useContext(ContactsContext);\r\n\tconst { contacts, teams } = contactsState;\r\n\tconst roles = ['personal', 'admin'];\r\n\tconst [contact, setContact] = useState();\r\n\r\n\tconst ref = useRef();\r\n\r\n\tuseEffect(() => setContact(contacts[clientIdx]));\r\n\r\n\tconst changeRole = (e) => {\r\n\t\tdispatch({\r\n\t\t\ttype: types.changeRole,\r\n\t\t\tpayload: { id: contact._id, role: e.target.value },\r\n\t\t});\r\n\r\n\t\taddToast(`Role changed successfully to ${e.target.value}.`, {\r\n\t\t\tappearance: 'success',\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeName = (e) => {\r\n\t\tsetContact({ ...contact, name: e.target.value });\r\n\t\tdispatch({\r\n\t\t\ttype: types.changeRole,\r\n\t\t\tpayload: { id: contact._id, name: e.target.value },\r\n\t\t});\r\n\t};\r\n\r\n\tconst changePhone = (e) => {\r\n\t\tdispatch({\r\n\t\t\ttype: types.changeRole,\r\n\t\t\tpayload: { id: contact._id, phone: e.target.value },\r\n\t\t});\r\n\t};\r\n\r\n\tconst currentTeam = (team) => {\r\n\t\tif (contact?.teams !== undefined) {\r\n\t\t\tconsole.log(\r\n\t\t\t\tR.find(R.propEq('name', team.name))(contact.teams) !== undefined\r\n\t\t\t\t\t? true\r\n\t\t\t\t\t: false\r\n\t\t\t);\r\n\t\t\treturn R.find(R.propEq('name', team.name))(contact.teams) !== undefined\r\n\t\t\t\t? true\r\n\t\t\t\t: false;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Popup ref={ref} trigger={trigger} modal>\r\n\t\t\t{(close) => (\r\n\t\t\t\t<div className=\"popup__add-contact\">\r\n\t\t\t\t\t<h4>Change Role</h4>\r\n\t\t\t\t\t<div className=\"popup__change-contact-role\">\r\n\t\t\t\t\t\t<div className=\"popup__contact-role\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\tName: <input onChange={changeName} value={contact?.name} />{' '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>Role: {contact?.role}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\tPhone: <input onChange={changePhone} value={contact?.phone} />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<select onChange={changeRole} name=\"role\" id=\"role\">\r\n\t\t\t\t\t\t\t\t{roles.map((role) => (\r\n\t\t\t\t\t\t\t\t\t<option selected={`${role === contact?.role && 'selected'}`}>\r\n\t\t\t\t\t\t\t\t\t\t{role}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t\t<div className=\"teams-role\">\r\n\t\t\t\t\t\t\t\t{console.log(teams)}\r\n\t\t\t\t\t\t\t\t{teams.map((team) => (\r\n\t\t\t\t\t\t\t\t\t<span className={`${currentTeam(team) && 'current-team'}`}>\r\n\t\t\t\t\t\t\t\t\t\t{team?.name}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"popup__actions\">\r\n\t\t\t\t\t\t<button>Confirm</button>\r\n\t\t\t\t\t\t<button onClick={close}>Close</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Popup>\r\n\t);\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\NumberMessage.js",[],{"ruleId":"305","severity":1,"message":"306","line":9,"column":10,"nodeType":"307","messageId":"308","endLine":9,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":12,"column":10,"nodeType":"307","messageId":"308","endLine":12,"endColumn":22},{"ruleId":"305","severity":1,"message":"310","line":13,"column":10,"nodeType":"307","messageId":"308","endLine":13,"endColumn":21},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"311","replacedBy":"315"},{"ruleId":"313","replacedBy":"316"},{"ruleId":"311","replacedBy":"317"},{"ruleId":"313","replacedBy":"318"},{"ruleId":"305","severity":1,"message":"319","line":1,"column":29,"nodeType":"307","messageId":"308","endLine":1,"endColumn":38},{"ruleId":"305","severity":1,"message":"320","line":23,"column":9,"nodeType":"307","messageId":"308","endLine":23,"endColumn":17},{"ruleId":"305","severity":1,"message":"321","line":29,"column":9,"nodeType":"307","messageId":"308","endLine":29,"endColumn":17},{"ruleId":"311","replacedBy":"322"},{"ruleId":"313","replacedBy":"323"},{"ruleId":"311","replacedBy":"324"},{"ruleId":"313","replacedBy":"325"},{"ruleId":"311","replacedBy":"326"},{"ruleId":"313","replacedBy":"327"},{"ruleId":"311","replacedBy":"328"},{"ruleId":"313","replacedBy":"329"},{"ruleId":"311","replacedBy":"330"},{"ruleId":"313","replacedBy":"331"},{"ruleId":"332","severity":1,"message":"333","line":92,"column":3,"nodeType":"334","messageId":"335","endLine":99,"endColumn":6},{"ruleId":"311","replacedBy":"336"},{"ruleId":"313","replacedBy":"337"},{"ruleId":"311","replacedBy":"338"},{"ruleId":"313","replacedBy":"339"},{"ruleId":"311","replacedBy":"340"},{"ruleId":"313","replacedBy":"341"},{"ruleId":"305","severity":1,"message":"342","line":9,"column":21,"nodeType":"307","messageId":"308","endLine":9,"endColumn":34},{"ruleId":"343","severity":1,"message":"344","line":29,"column":26,"nodeType":"345","messageId":"346","endLine":29,"endColumn":28},{"ruleId":"311","replacedBy":"347"},{"ruleId":"313","replacedBy":"348"},{"ruleId":"311","replacedBy":"349"},{"ruleId":"313","replacedBy":"350"},{"ruleId":"311","replacedBy":"351"},{"ruleId":"313","replacedBy":"352"},{"ruleId":"311","replacedBy":"353"},{"ruleId":"313","replacedBy":"354"},{"ruleId":"311","replacedBy":"355"},{"ruleId":"313","replacedBy":"356"},{"ruleId":"305","severity":1,"message":"319","line":1,"column":29,"nodeType":"307","messageId":"308","endLine":1,"endColumn":38},{"ruleId":"305","severity":1,"message":"357","line":1,"column":48,"nodeType":"307","messageId":"308","endLine":1,"endColumn":56},{"ruleId":"358","severity":1,"message":"359","line":20,"column":6,"nodeType":"360","endLine":20,"endColumn":8,"suggestions":"361"},{"ruleId":"305","severity":1,"message":"362","line":7,"column":10,"nodeType":"307","messageId":"308","endLine":7,"endColumn":32},{"ruleId":"305","severity":1,"message":"342","line":13,"column":21,"nodeType":"307","messageId":"308","endLine":13,"endColumn":34},{"ruleId":"343","severity":1,"message":"344","line":38,"column":29,"nodeType":"345","messageId":"346","endLine":38,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":104,"column":23,"nodeType":"365","endLine":107,"endColumn":25},{"ruleId":"343","severity":1,"message":"344","line":40,"column":29,"nodeType":"345","messageId":"346","endLine":40,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":99,"column":23,"nodeType":"365","endLine":102,"endColumn":25},{"ruleId":"343","severity":1,"message":"344","line":47,"column":29,"nodeType":"345","messageId":"346","endLine":47,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":135,"column":23,"nodeType":"365","endLine":138,"endColumn":25},{"ruleId":"305","severity":1,"message":"357","line":1,"column":44,"nodeType":"307","messageId":"308","endLine":1,"endColumn":52},{"ruleId":"311","replacedBy":"366"},{"ruleId":"313","replacedBy":"367"},{"ruleId":"305","severity":1,"message":"319","line":1,"column":29,"nodeType":"307","messageId":"308","endLine":1,"endColumn":38},{"ruleId":"305","severity":1,"message":"357","line":1,"column":48,"nodeType":"307","messageId":"308","endLine":1,"endColumn":56},{"ruleId":"368","severity":1,"message":"369","line":23,"column":20,"nodeType":"370","messageId":"335","endLine":23,"endColumn":24},{"ruleId":"305","severity":1,"message":"319","line":1,"column":29,"nodeType":"307","messageId":"308","endLine":1,"endColumn":38},{"ruleId":"363","severity":1,"message":"364","line":112,"column":25,"nodeType":"365","endLine":115,"endColumn":27},{"ruleId":"363","severity":1,"message":"364","line":110,"column":25,"nodeType":"365","endLine":113,"endColumn":27},{"ruleId":"311","replacedBy":"371"},{"ruleId":"313","replacedBy":"372"},{"ruleId":"305","severity":1,"message":"373","line":8,"column":13,"nodeType":"307","messageId":"308","endLine":8,"endColumn":14},{"ruleId":"305","severity":1,"message":"342","line":15,"column":29,"nodeType":"307","messageId":"308","endLine":15,"endColumn":42},{"ruleId":"343","severity":1,"message":"344","line":33,"column":39,"nodeType":"345","messageId":"346","endLine":33,"endColumn":41},{"ruleId":"363","severity":1,"message":"364","line":89,"column":23,"nodeType":"365","endLine":92,"endColumn":25},{"ruleId":"374","severity":1,"message":"375","line":59,"column":21,"nodeType":"365","endLine":59,"endColumn":55},{"ruleId":"305","severity":1,"message":"319","line":1,"column":29,"nodeType":"307","messageId":"308","endLine":1,"endColumn":38},{"ruleId":"305","severity":1,"message":"357","line":1,"column":48,"nodeType":"307","messageId":"308","endLine":1,"endColumn":56},{"ruleId":"358","severity":1,"message":"376","line":19,"column":2,"nodeType":"307","endLine":19,"endColumn":11,"suggestions":"377"},"no-unused-vars","'ContactsContext' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'PublicRoute' is defined but never used.","no-native-reassign",["378"],"no-negated-in-lhs",["379"],["378"],["379"],["378"],["379"],"'useEffect' is defined but never used.","'location' is assigned a value but never used.","'showBack' is assigned a value but never used.",["378"],["379"],["378"],["379"],["378"],["379"],["378"],["379"],["378"],["379"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["378"],["379"],["378"],["379"],["378"],["379"],"'activeContact' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["378"],["379"],["378"],["379"],["378"],["379"],["378"],["379"],["378"],["379"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatchFiles'. Either include it or remove the dependency array.","ArrayExpression",["380"],"'scrollToBottomAnimated' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["378"],["379"],"no-eval","eval can be harmful.","CallExpression",["378"],["379"],"'R' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect contains a call to 'setContact'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [contacts, clientIdx] as a second argument to the useEffect Hook.",["381"],"no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},"Update the dependencies array to be: [dispatchFiles]",{"range":"386","text":"387"},"Add dependencies array: [contacts, clientIdx]",{"range":"388","text":"389"},[797,799],"[dispatchFiles]",[684,684],", [contacts, clientIdx]"]