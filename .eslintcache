[{"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AppRouter.js":"1","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\RegisterScreen.js":"2","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\LoginScreen.js":"3","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\MainRouter.js":"4","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Contacts.js":"5","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AuthRouter.js":"6","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\Navbar.js":"7","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\ChatPage.js":"8","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Info.js":"9","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Chat.js":"10","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\SmsApp.js":"11","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\index.js":"12","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\ContactsContext.js":"13","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsReducer.js":"14","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\service\\contactsService.js":"15","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsTypes.js":"16","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Notes.js":"17","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\UsersPage.js":"18","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Customers.js":"19","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Options.js":"20","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\SearchContacts.js":"21","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Templates.js":"22","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Area.js":"23","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\MessagePage.js":"24","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\AdminPage.js":"25","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Table.js":"26","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Panel.js":"27","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddUser.js":"28","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\scrollToBottom.js":"29","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\SlidePanel.js":"30","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Messages.js":"31","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendMessage.js":"32","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\CreateTeam.js":"33","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTeamContact.js":"34","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\RemoveTeamContact.js":"35","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthContext.js":"36","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\fetch.js":"37","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PublicRoute.js":"38","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTemplate.js":"39","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PrivateRoute.js":"40","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\groups\\GroupsPage.js":"41","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddGroup.js":"42","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\EditGroup.js":"43","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendTemplate.js":"44","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Media.js":"45","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Groups.js":"46","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthReducer.js":"47","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddClient.js":"48","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\ChangeRole.js":"49","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\NumberMessage.js":"50","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\API\\index.js":"51","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\API\\api.js":"52"},{"size":1142,"mtime":1616223513289,"results":"53","hashOfConfig":"54"},{"size":1101,"mtime":1611261234728,"results":"55","hashOfConfig":"54"},{"size":3142,"mtime":1616388654947,"results":"56","hashOfConfig":"54"},{"size":1919,"mtime":1619820215066,"results":"57","hashOfConfig":"54"},{"size":2877,"mtime":1619820194933,"results":"58","hashOfConfig":"54"},{"size":599,"mtime":1611260475175,"results":"59","hashOfConfig":"54"},{"size":1746,"mtime":1613108102929,"results":"60","hashOfConfig":"54"},{"size":322,"mtime":1611409877334,"results":"61","hashOfConfig":"54"},{"size":3674,"mtime":1616390652022,"results":"62","hashOfConfig":"54"},{"size":4956,"mtime":1620345575933,"results":"63","hashOfConfig":"54"},{"size":177,"mtime":1611401771760,"results":"64","hashOfConfig":"54"},{"size":549,"mtime":1612654831568,"results":"65","hashOfConfig":"54"},{"size":743,"mtime":1616988182461,"results":"66","hashOfConfig":"54"},{"size":6896,"mtime":1619410773703,"results":"67","hashOfConfig":"54"},{"size":57427,"mtime":1613887727083,"results":"68","hashOfConfig":"54"},{"size":1398,"mtime":1616994809738,"results":"69","hashOfConfig":"54"},{"size":3509,"mtime":1612058095988,"results":"70","hashOfConfig":"54"},{"size":341,"mtime":1611411246134,"results":"71","hashOfConfig":"54"},{"size":1644,"mtime":1611414232783,"results":"72","hashOfConfig":"54"},{"size":1282,"mtime":1611415700052,"results":"73","hashOfConfig":"54"},{"size":3530,"mtime":1614377562369,"results":"74","hashOfConfig":"54"},{"size":963,"mtime":1613118117226,"results":"75","hashOfConfig":"54"},{"size":841,"mtime":1613102260254,"results":"76","hashOfConfig":"54"},{"size":361,"mtime":1611419237337,"results":"77","hashOfConfig":"54"},{"size":385,"mtime":1611438521330,"results":"78","hashOfConfig":"54"},{"size":7030,"mtime":1619155714419,"results":"79","hashOfConfig":"54"},{"size":2707,"mtime":1619820196941,"results":"80","hashOfConfig":"54"},{"size":3107,"mtime":1619155480910,"results":"81","hashOfConfig":"54"},{"size":313,"mtime":1611448837321,"results":"82","hashOfConfig":"54"},{"size":1792,"mtime":1616219235938,"results":"83","hashOfConfig":"54"},{"size":5514,"mtime":1619820310687,"results":"84","hashOfConfig":"54"},{"size":3736,"mtime":1614377944303,"results":"85","hashOfConfig":"54"},{"size":4711,"mtime":1619154548785,"results":"86","hashOfConfig":"54"},{"size":5040,"mtime":1612501401410,"results":"87","hashOfConfig":"54"},{"size":5216,"mtime":1612501941800,"results":"88","hashOfConfig":"54"},{"size":480,"mtime":1616223253145,"results":"89","hashOfConfig":"54"},{"size":1194,"mtime":1612654630954,"results":"90","hashOfConfig":"54"},{"size":335,"mtime":1616223476907,"results":"91","hashOfConfig":"54"},{"size":2261,"mtime":1613102860803,"results":"92","hashOfConfig":"54"},{"size":335,"mtime":1616221016803,"results":"93","hashOfConfig":"54"},{"size":2701,"mtime":1613866475498,"results":"94","hashOfConfig":"54"},{"size":4518,"mtime":1613114650836,"results":"95","hashOfConfig":"54"},{"size":4453,"mtime":1613117765909,"results":"96","hashOfConfig":"54"},{"size":4972,"mtime":1614377824773,"results":"97","hashOfConfig":"54"},{"size":2235,"mtime":1619820200215,"results":"98","hashOfConfig":"54"},{"size":820,"mtime":1616048081678,"results":"99","hashOfConfig":"54"},{"size":275,"mtime":1616223171191,"results":"100","hashOfConfig":"54"},{"size":3320,"mtime":1619155859043,"results":"101","hashOfConfig":"54"},{"size":2770,"mtime":1619410845421,"results":"102","hashOfConfig":"54"},{"size":2600,"mtime":1620345740033,"results":"103","hashOfConfig":"54"},{"size":411,"mtime":1619820674959,"results":"104","hashOfConfig":"54"},{"size":951,"mtime":1620346108674,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},"1ocq74j",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"181"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"167"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AppRouter.js",["245","246","247"],"import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth/AuthContext\";\r\nimport { ContactsContext } from \"../context/ContactsContext\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { MainRouter } from \"./MainRouter\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const { authState } = useContext(AuthContext);\r\n  console.log(authState);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          {/* <PrivateRoute\r\n            isAuthenticated={authState.logged}\r\n            exact\r\n            path=\"/\"\r\n            component={MainRouter}\r\n          />\r\n          <PublicRoute\r\n            isAuthenticated={authState.logged}\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n          /> */}\r\n          <Route path=\"/auth\" component={AuthRouter} />\r\n          <Route path=\"/\" component={MainRouter} />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n",["248","249"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\RegisterScreen.js",[],["250","251"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\auth\\LoginScreen.js",[],["252","253"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\MainRouter.js",["254","255","256"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Contacts.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\AuthRouter.js",[],["257","258"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\Navbar.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\ChatPage.js",[],["259","260"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Info.js",[],["261","262"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Chat.js",["263"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\SmsApp.js",[],["264","265"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\index.js",[],["266","267"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\ContactsContext.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsReducer.js",["268"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\service\\contactsService.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\contactsTypes.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Notes.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\UsersPage.js",[],["269","270"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Customers.js",[],["271","272"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\users\\Options.js",[],["273","274"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\SearchContacts.js",["275","276"],"import React, { useContext, useState } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const SearchContacts = () => {\r\n  const { dispatch, contactsState } = useContext(ContactsContext);\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const { contacts, activeContact, templates, activeTemplate } = contactsState;\r\n  const [useContacts, setUseContacts] = useState(contacts);\r\n  const [sendTo, setSendTo] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  const addContact = (idx) => {\r\n    setSendTo([...sendTo, useContacts[idx]]);\r\n    setUseContacts(useContacts.filter((_, id) => id !== idx));\r\n  };\r\n\r\n  const removeContact = (idx) => {\r\n    setUseContacts([...useContacts, sendTo[idx]]);\r\n    setSendTo(sendTo.filter((_, id) => id !== idx));\r\n  };\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    sendTo.map(({ _id }) => {\r\n      dispatch({\r\n        type: types.updateUnreaded,\r\n        payload: { id: _id, value: 1 },\r\n      });\r\n\r\n      dispatch({\r\n        type: types.addMultiMessages,\r\n        payload: {\r\n          id: _id,\r\n          message: {\r\n            origin: \"from\",\r\n            message: templates[activeTemplate].message,\r\n            date: new Date().toString(),\r\n          },\r\n        },\r\n      });\r\n    });\r\n\r\n    addToast(\r\n      `Message '${templates[activeTemplate].message}' was send successfully.`,\r\n      {\r\n        appearance: \"info\",\r\n      }\r\n    );\r\n\r\n    setUseContacts([...useContacts, ...sendTo]);\r\n    setSendTo([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"message__contact\">\r\n      <button>Edit Template</button>\r\n      <button>Delete Template</button>\r\n\r\n      <label>Send your SMS here! Search your contact</label>\r\n      <input onChange={searchContact} type=\"text\" placeholder=\"Search...\" />\r\n\r\n      <div className=\"message__container scroll\">\r\n        {useContacts.map(\r\n          (contact, idx) =>\r\n            contact.name\r\n              .toLowerCase()\r\n              .includes(searchContacts.toLowerCase()) && (\r\n              <div key={idx} className=\"message__badge\">\r\n                <div className=\"b-shadow message__name\">\r\n                  <img\r\n                    className=\"circle-img\"\r\n                    src=\"https://picsum.photos/200/200\"\r\n                    alt=\"\"\r\n                  />\r\n                  <span>{contact.name}</span>\r\n                </div>\r\n\r\n                <i\r\n                  onClick={() => addContact(idx)}\r\n                  className=\"b-shadow fas fa-paper-plane\"\r\n                ></i>\r\n              </div>\r\n            )\r\n        )}\r\n      </div>\r\n      <hr />\r\n\r\n      <h3>Send message to...</h3>\r\n      <div className=\"message__container-secondary scroll b-shadow\">\r\n        {sendTo.map((contact, idx) => (\r\n          <div key={idx} className=\"message__badge\">\r\n            <div className=\"message__name\">\r\n              <img\r\n                className=\"circle-img\"\r\n                src=\"https://picsum.photos/200/200\"\r\n                alt=\"\"\r\n              />\r\n              <span>{contact.name}</span>\r\n              <i\r\n                onClick={() => removeContact(idx)}\r\n                className=\" fa fa-times\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={sendMessage}>Use Template</button>\r\n    </div>\r\n  );\r\n};\r\n",["277","278"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Templates.js",[],["279","280"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\Area.js",[],["281","282"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\message\\MessagePage.js",[],["283","284"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\AdminPage.js",[],["285","286"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Table.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\admin\\Panel.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddUser.js",["287","288"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\nimport sid from \"shortid\";\r\n\r\nexport const AddUser = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { dispatch } = useContext(ContactsContext);\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (\r\n      data.name &&\r\n      data.email &&\r\n      data.phone &&\r\n      data.role !== \"Select one option...\"\r\n    ) {\r\n      dispatch({\r\n        type: types.addContacts,\r\n        payload: [\r\n          {\r\n            _id: sid.generate(),\r\n            teams: [{ name: \"contacts\", phone: 5500000000 }],\r\n            notes: [],\r\n            unreaded: 0,\r\n            messages: [],\r\n            ...data,\r\n          },\r\n        ],\r\n      });\r\n\r\n      addToast(`User '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(`You need to fill all inputs if you want create a new user.`, {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-user\">\r\n          <h4>Add User</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name user...\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Email</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"test@test.com\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Phone</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder=\"+ 52 00 0000 0000\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Role</label>\r\n              <select ref={register({ required: true })} name=\"role\">\r\n                <option>Select one option...</option>\r\n                <option value=\"client\">Client</option>\r\n                <option value=\"admin\">Admin</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n",["289","290"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\scrollToBottom.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\navbar\\SlidePanel.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\chat\\Messages.js",["291"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendMessage.js",["292","293","294","295"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\nimport { scrollToBottomAnimated } from \"../../helpers/scrollToBottom\";\r\n\r\nexport const SendMessage = ({ trigger }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, activeContact } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearch(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const onChange = ({ target }) => setMessage(target.value);\r\n\r\n  const sendMessage = () => {\r\n    if (message.length > 0 && sltdContacts.length > 0) {\r\n      sltdContacts.map((id) => {\r\n        dispatch({\r\n          type: types.updateUnreaded,\r\n          payload: { id, value: 1 },\r\n        });\r\n\r\n        dispatch({\r\n          type: types.addMultiMessages,\r\n          payload: {\r\n            id,\r\n            message: { origin: \"from\", message, date: new Date().toString() },\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`Message '${message}' was sended successfully.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      setMessage(\"\");\r\n      setSltdContacts([]);\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to write something and select a contact if you want to send a message.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__send-message\">\r\n          <h4>Send Message</h4>\r\n\r\n          <textarea\r\n            onChange={onChange}\r\n            value={message}\r\n            className=\"b-shadow\"\r\n            placeholder=\"Write your message...\"\r\n          ></textarea>\r\n\r\n          <div className=\"popup__contacts\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={search}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  contact.name.toLowerCase().includes(search.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() =>\r\n                        selected(sltdContacts, setSltdContacts, contact._id)\r\n                      }\r\n                      className={`b-shadow ${\r\n                        selectedClass(contact._id, sltdContacts) &&\r\n                        \"popup__send-message-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <span>{contact.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={sendMessage}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\CreateTeam.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTeamContact.js",["296","297"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const AddTeamContact = ({ trigger }) => {\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const [searchTeams, setSearchTeams] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, teams } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [sltdTeams, setSltdTeams] = useState([]);\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const searchTeam = ({ target }) => {\r\n    setSearchTeams(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const addTeamContacts = () => {\r\n    if (sltdContacts.length > 0 && sltdTeams.length > 0) {\r\n      sltdContacts.map((id) => {\r\n        dispatch({\r\n          type: types.addMultiTeamContacts,\r\n          payload: {\r\n            _id: id,\r\n            teams: sltdTeams,\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`User(s) added successfully to there teams.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      setSltdContacts([]);\r\n      setSltdTeams([]);\r\n      setSearchContacts(\"\");\r\n      setSearchTeams(\"\");\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to select one or more contacts and teams to confirm.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-contact\">\r\n          <h4>Add Team Contact</h4>\r\n\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={searchContacts}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Contacts</label>\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  contact.name\r\n                    .toLowerCase()\r\n                    .includes(searchContacts.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() =>\r\n                        selected(sltdContacts, setSltdContacts, contact._id)\r\n                      }\r\n                      className={`b-shadow ${\r\n                        selectedClass(contact._id, sltdContacts) &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <div>\r\n                        <span>{contact.name}</span>\r\n                        <div className=\"popup_add-contact-teams\">\r\n                          {contact.teams.map(\r\n                            (team, idx) =>\r\n                              team.name !== \"contacts\" && (\r\n                                <span key={idx}>{team.name}</span>\r\n                              )\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchTeam}\r\n              value={searchTeams}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Teams</label>\r\n            <ul className=\"scroll\">\r\n              {teams.map(\r\n                (team, idx) =>\r\n                  team.name !== \"contacts\" &&\r\n                  team.name\r\n                    .toLowerCase()\r\n                    .includes(searchTeams.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() => selected(sltdTeams, setSltdTeams, team)}\r\n                      className={`b-shadow ${\r\n                        selectedClass(team, sltdTeams) &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <span>{team.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={addTeamContacts}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\RemoveTeamContact.js",["298","299"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nimport * as R from \"ramda\";\r\n\r\nexport const RemoveTeamContact = ({ trigger }) => {\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const [searchTeams, setSearchTeams] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, teams } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [sltdTeam, setSltdTeam] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const searchTeam = ({ target }) => {\r\n    setSearchTeams(target.value);\r\n  };\r\n\r\n  const propTeamName = (teams) => {\r\n    const hasTeam = R.propEq(\"name\", sltdTeam);\r\n    return R.filter(hasTeam, teams).length > 0 ? true : false;\r\n  };\r\n\r\n  const removeTeamContacts = () => {\r\n    if (sltdContacts.length > 0 && sltdTeam.length > 0) {\r\n      sltdContacts.map((id) => {\r\n        dispatch({\r\n          type: types.removeMultiTeamContacts,\r\n          payload: {\r\n            id: id,\r\n            team: sltdTeam,\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`User(s) added successfully to there teams.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      setSltdContacts([]);\r\n      setSearchContacts(\"\");\r\n      setSearchTeams(\"\");\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to select one or more contacts and a team to confirm.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-contact\">\r\n          <h4>Remove Team Contact</h4>\r\n\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchTeam}\r\n              value={searchTeams}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Teams</label>\r\n            <ul className=\"scroll\">\r\n              {teams.map(\r\n                (team, idx) =>\r\n                  team.name !== \"contacts\" &&\r\n                  team.name\r\n                    .toLowerCase()\r\n                    .includes(searchTeams.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() => setSltdTeam(team.name)}\r\n                      className={`b-shadow ${\r\n                        sltdTeam === team.name && \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <span>{team.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={searchContacts}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Contacts</label>\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  contact.name\r\n                    .toLowerCase()\r\n                    .includes(searchContacts.toLowerCase()) &&\r\n                  propTeamName(contact.teams) && (\r\n                    <li\r\n                      onClick={() =>\r\n                        selected(sltdContacts, setSltdContacts, contact._id)\r\n                      }\r\n                      className={`b-shadow ${\r\n                        selectedClass(contact._id, sltdContacts) &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <div>\r\n                        <span>{contact.name}</span>\r\n                        <div className=\"popup_add-contact-teams\">\r\n                          {contact.teams.map(\r\n                            (team, idx) =>\r\n                              team.name !== \"contacts\" && (\r\n                                <span key={idx}>{team.name}</span>\r\n                              )\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={removeTeamContacts}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n",["300","301"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthContext.js",["302"],"import React, { createContext, useReducer, useState } from \"react\";\nimport { authReducer } from \"./AuthReducer\";\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n  logged: false,\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [authState, dispatch] = useReducer(authReducer, initialState);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authState,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n",["303","304"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\helpers\\fetch.js",[],["305","306"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PublicRoute.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddTemplate.js",["307","308","309"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const AddTemplate = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { dispatch } = useContext(ContactsContext);\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.name && data.message) {\r\n      dispatch({\r\n        type: types.addTemplate,\r\n        payload: {\r\n          name: data.name,\r\n          message: eval(\"`\" + data.message + \"`\"),\r\n        },\r\n      });\r\n\r\n      addToast(`Template '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to fill all inputs if you want create a new template.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-user\">\r\n          <h4>Add Template</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Template Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Template name...\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Message</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"message\"\r\n                placeholder=\"Hello, how are you?...\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n",["310","311"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\groups\\GroupsPage.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddGroup.js",["312","313"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const AddGroup = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const { dispatch, contactsState } = useContext(ContactsContext);\r\n  const { contacts } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.name && data.desc) {\r\n      dispatch({\r\n        type: types.addGroup,\r\n        payload: {\r\n          name: data.name,\r\n          desc: data.desc,\r\n          contacts: [...sltdContacts],\r\n        },\r\n      });\r\n\r\n      addToast(`Group '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      setSltdContacts([]);\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to fill all inputs if you want create a new template.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__group\">\r\n          <h4>Add Group</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Group Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Group name...\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Description</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"desc\"\r\n                placeholder=\"This group is...\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"popup__group-contacts\">\r\n              <input\r\n                onChange={searchContact}\r\n                value={searchContacts}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n              />\r\n\r\n              <ul className=\"scroll\">\r\n                {contacts.map(\r\n                  (contact, idx) =>\r\n                    contact.name\r\n                      .toLowerCase()\r\n                      .includes(searchContacts.toLowerCase()) && (\r\n                      <li\r\n                        onClick={() =>\r\n                          selected(sltdContacts, setSltdContacts, contact._id)\r\n                        }\r\n                        className={`b-shadow ${\r\n                          selectedClass(contact._id, sltdContacts) &&\r\n                          \"popup__add-team-selected\"\r\n                        }`}\r\n                        key={idx}\r\n                      >\r\n                        <img\r\n                          className=\"circle-img\"\r\n                          src=\"https://picsum.photos/200/200\"\r\n                        />\r\n                        <div>\r\n                          <span>{contact.name}</span>\r\n                          <div className=\"popup_add-contact-teams\">\r\n                            {contact.teams.map(\r\n                              (team, idx) =>\r\n                                team.name !== \"contacts\" && (\r\n                                  <span key={idx}>{team.name}</span>\r\n                                )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                )}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\EditGroup.js",["314"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nexport const EditGroup = ({ trigger, group }) => {\r\n  const { addToast } = useToasts();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const { dispatch, contactsState } = useContext(ContactsContext);\r\n  const { groups, contacts } = contactsState;\r\n  const [sltdContacts, setSltdContacts] = useState([]);\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.name && data.desc) {\r\n      dispatch({\r\n        type: types.editGroup,\r\n        payload: {\r\n          id: group,\r\n          name: data.name,\r\n          desc: data.desc,\r\n        },\r\n      });\r\n\r\n      addToast(`Group '${data.name}' was edited successfully.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to fill all inputs if you want create a new template.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const selected = (init, set, cond) => {\r\n    if (init.includes(cond)) {\r\n      set(init.filter((sel) => sel !== cond));\r\n    } else {\r\n      set([...init, cond]);\r\n    }\r\n  };\r\n\r\n  const currentContact = (cond, array) => array.includes(cond);\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__group\">\r\n          <h4>Edit Group</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Group Name</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Group name...\"\r\n                defaultValue={groups[group].name}\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Description</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"desc\"\r\n                placeholder=\"This group is...\"\r\n                defaultValue={groups[group].desc}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"popup__group-contacts\">\r\n              <input\r\n                onChange={searchContact}\r\n                value={searchContacts}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n              />\r\n\r\n              <ul className=\"scroll\">\r\n                {contacts.map(\r\n                  (contact, idx) =>\r\n                    currentContact(contact._id, groups[group].contacts) &&\r\n                    contact.name\r\n                      .toLowerCase()\r\n                      .includes(searchContacts.toLowerCase()) && (\r\n                      <li\r\n                        onClick={() =>\r\n                          selected(sltdContacts, setSltdContacts, contact._id)\r\n                        }\r\n                        key={idx}\r\n                      >\r\n                        <img\r\n                          className=\"circle-img\"\r\n                          src=\"https://picsum.photos/200/200\"\r\n                        />\r\n                        <div>\r\n                          <span>{contact.name}</span>\r\n                          <div className=\"popup_add-contact-teams\">\r\n                            {contact.teams.map(\r\n                              (team, idx) =>\r\n                                team.name !== \"contacts\" && (\r\n                                  <span key={idx}>{team.name}</span>\r\n                                )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                )}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n",["315","316"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\SendTemplate.js",["317","318","319","320"],"import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\n\r\nimport * as R from \"ramda\";\r\n\r\nexport const SendTemplate = ({ trigger, group }) => {\r\n  const [searchContacts, setSearchContacts] = useState(\"\");\r\n  const [searchTemplates, setSearchTemplates] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n  const { contactsState, dispatch } = useContext(ContactsContext);\r\n  const { contacts, groups, activeContact, templates } = contactsState;\r\n  const [sltdTemplate, setSltdTemplate] = useState(templates[0]);\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const selectedClass = (cond, array) => array.includes(cond);\r\n\r\n  const searchContact = ({ target }) => {\r\n    setSearchContacts(target.value);\r\n  };\r\n\r\n  const searchTemplate = ({ target }) => {\r\n    setSearchTemplates(target.value);\r\n  };\r\n\r\n  const sendTemplate = () => {\r\n    if (groups[group].contacts.length > 0) {\r\n      groups[group].contacts.map((id) => {\r\n        dispatch({\r\n          type: types.updateUnreaded,\r\n          payload: { id, value: 1 },\r\n        });\r\n\r\n        dispatch({\r\n          type: types.addMultiMessages,\r\n          payload: {\r\n            id,\r\n            message: {\r\n              origin: \"from\",\r\n              message: sltdTemplate.message,\r\n              date: new Date().toString(),\r\n            },\r\n          },\r\n        });\r\n      });\r\n\r\n      addToast(`Message '${sltdTemplate.message}' was sended successfully.`, {\r\n        appearance: \"info\",\r\n      });\r\n\r\n      closeTooltip();\r\n    } else {\r\n      addToast(\r\n        `You need to write something and select a contact if you want to send a message.`,\r\n        {\r\n          appearance: \"error\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-contact\">\r\n          <h4>Send Template</h4>\r\n\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchContact}\r\n              value={searchContacts}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Group Contacts</label>\r\n            <ul className=\"scroll\">\r\n              {contacts.map(\r\n                (contact, idx) =>\r\n                  selectedClass(contact._id, groups[group].contacts) &&\r\n                  contact.name\r\n                    .toLowerCase()\r\n                    .includes(searchContacts.toLowerCase()) && (\r\n                    <li key={idx} className=\"b-shadow \">\r\n                      <img\r\n                        className=\"circle-img\"\r\n                        src=\"https://picsum.photos/200/200\"\r\n                      />\r\n                      <div>\r\n                        <span>{contact.name}</span>\r\n                        <div className=\"popup_add-contact-teams\">\r\n                          {contact.teams.map(\r\n                            (team, idx) =>\r\n                              team.name !== \"contacts\" && (\r\n                                <span key={idx}>{team.name}</span>\r\n                              )\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"popup__add-contact-list\">\r\n            <input\r\n              onChange={searchTemplate}\r\n              value={searchTemplates}\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <label>Templates</label>\r\n            <ul className=\"scroll\">\r\n              {templates.map(\r\n                (template, idx) =>\r\n                  template.name\r\n                    .toLowerCase()\r\n                    .includes(searchTemplates.toLowerCase()) && (\r\n                    <li\r\n                      onClick={() => setSltdTemplate(template)}\r\n                      className={`b-shadow ${\r\n                        sltdTemplate.name === template.name &&\r\n                        \"popup__add-team-selected\"\r\n                      }`}\r\n                      key={idx}\r\n                    >\r\n                      {console.log({\r\n                        name: template.name,\r\n                        prop: sltdTemplate.name,\r\n                      })}\r\n                      {console.log(sltdTemplate.name === template.name)}\r\n                      <span>{template.name}</span>\r\n                    </li>\r\n                  )\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popup__actions\">\r\n            <button onClick={sendTemplate}>Confirm</button>\r\n            <button onClick={close}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Media.js",["321"],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\Groups.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\context\\auth\\AuthReducer.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\AddClient.js",["322","323"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ContactsContext } from \"../../context/ContactsContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { types } from \"../../context/contactsTypes\";\r\nimport sid from \"shortid\";\r\n\r\nexport const AddClient = ({ trigger }) => {\r\n  const { addToast } = useToasts();\r\n  const { dispatch } = useContext(ContactsContext);\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const ref = useRef();\r\n  const closeTooltip = () => ref.current.close();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.phone) {\r\n      dispatch({\r\n        type: types.addClients,\r\n        payload: [\r\n          {\r\n            _id: sid.generate(),\r\n            teams: [{ name: \"clients\", phone: 5500000000 }],\r\n            notes: [],\r\n            unreaded: 0,\r\n            messages: [],\r\n            role: \"client\",\r\n            name: data.name ? data.name : \"No name\",\r\n            ...data,\r\n          },\r\n        ],\r\n      });\r\n\r\n      addToast(`Client '${data.name}' was added successfully.`, {\r\n        appearance: \"success\",\r\n      });\r\n\r\n      reset();\r\n      closeTooltip();\r\n    } else {\r\n      addToast(`You need to fill all inputs if you want create a new client.`, {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup ref={ref} trigger={trigger} modal>\r\n      {(close) => (\r\n        <div className=\"popup__add-user\">\r\n          <h4>Add Contact</h4>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"popup__field\">\r\n              <label>Name</label>\r\n              <input type=\"text\" name=\"name\" placeholder=\"Name user...\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Email</label>\r\n              <input type=\"email\" name=\"email\" placeholder=\"test@test.com\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Phone</label>\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder=\"+ 52 00 0000 0000\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Birthday</label>\r\n              <input type=\"text\" name=\"birthday\" placeholder=\"12/31/1998\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                placeholder=\"Atizapan de Zaragoza, Las penitas, Coral #7\"\r\n              />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Company</label>\r\n              <input type=\"text\" name=\"company\" placeholder=\"Microsoft\" />\r\n            </div>\r\n            <div className=\"popup__field\">\r\n              <label>Website</label>\r\n              <input type=\"text\" name=\"website\" placeholder=\"www.example.com\" />\r\n            </div>\r\n\r\n            <div className=\"popup__actions\">\r\n              <button type=\"submit\">Confirm</button>\r\n              <button onClick={close}>Close</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\ChangeRole.js",["324"],"import React, { useContext, useRef, useEffect, useState } from 'react';\r\n\r\nimport Popup from 'reactjs-popup';\r\nimport { ContactsContext } from '../../context/ContactsContext';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { types } from '../../context/contactsTypes';\r\n\r\nimport * as R from 'ramda';\r\n\r\nexport const ChangeRole = ({ trigger, clientIdx }) => {\r\n\tconst { addToast } = useToasts();\r\n\tconst { contactsState, dispatch } = useContext(ContactsContext);\r\n\tconst { contacts, teams } = contactsState;\r\n\tconst roles = ['personal', 'admin'];\r\n\tconst [contact, setContact] = useState();\r\n\r\n\tconst ref = useRef();\r\n\r\n\tuseEffect(() => setContact(contacts[clientIdx]));\r\n\r\n\tconst changeRole = (e) => {\r\n\t\tdispatch({\r\n\t\t\ttype: types.changeRole,\r\n\t\t\tpayload: { id: contact._id, role: e.target.value },\r\n\t\t});\r\n\r\n\t\taddToast(`Role changed successfully to ${e.target.value}.`, {\r\n\t\t\tappearance: 'success',\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeName = (e) => {\r\n\t\tsetContact({ ...contact, name: e.target.value });\r\n\t\tdispatch({\r\n\t\t\ttype: types.changeRole,\r\n\t\t\tpayload: { id: contact._id, name: e.target.value },\r\n\t\t});\r\n\t};\r\n\r\n\tconst changePhone = (e) => {\r\n\t\tdispatch({\r\n\t\t\ttype: types.changeRole,\r\n\t\t\tpayload: { id: contact._id, phone: e.target.value },\r\n\t\t});\r\n\t};\r\n\r\n\tconst currentTeam = (team) => {\r\n\t\tif (contact?.teams !== undefined) {\r\n\t\t\tconsole.log(\r\n\t\t\t\tR.find(R.propEq('name', team.name))(contact.teams) !== undefined\r\n\t\t\t\t\t? true\r\n\t\t\t\t\t: false\r\n\t\t\t);\r\n\t\t\treturn R.find(R.propEq('name', team.name))(contact.teams) !== undefined\r\n\t\t\t\t? true\r\n\t\t\t\t: false;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Popup ref={ref} trigger={trigger} modal>\r\n\t\t\t{(close) => (\r\n\t\t\t\t<div className=\"popup__add-contact\">\r\n\t\t\t\t\t<h4>Change Role</h4>\r\n\t\t\t\t\t<div className=\"popup__change-contact-role\">\r\n\t\t\t\t\t\t<div className=\"popup__contact-role\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\tName: <input onChange={changeName} value={contact?.name} />{' '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>Role: {contact?.role}</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\tPhone: <input onChange={changePhone} value={contact?.phone} />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<select onChange={changeRole} name=\"role\" id=\"role\">\r\n\t\t\t\t\t\t\t\t{roles.map((role) => (\r\n\t\t\t\t\t\t\t\t\t<option selected={`${role === contact?.role && 'selected'}`}>\r\n\t\t\t\t\t\t\t\t\t\t{role}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t\t<div className=\"teams-role\">\r\n\t\t\t\t\t\t\t\t{console.log(teams)}\r\n\t\t\t\t\t\t\t\t{teams.map((team) => (\r\n\t\t\t\t\t\t\t\t\t<span className={`${currentTeam(team) && 'current-team'}`}>\r\n\t\t\t\t\t\t\t\t\t\t{team?.name}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"popup__actions\">\r\n\t\t\t\t\t\t<button>Confirm</button>\r\n\t\t\t\t\t\t<button onClick={close}>Close</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Popup>\r\n\t);\r\n};\r\n","C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\components\\popup\\NumberMessage.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\API\\index.js",[],"C:\\Users\\jesus\\Documents\\Work\\Amor\\evitiu-sms\\src\\API\\api.js",[],{"ruleId":"325","severity":1,"message":"326","line":9,"column":10,"nodeType":"327","messageId":"328","endLine":9,"endColumn":25},{"ruleId":"325","severity":1,"message":"329","line":12,"column":10,"nodeType":"327","messageId":"328","endLine":12,"endColumn":22},{"ruleId":"325","severity":1,"message":"330","line":13,"column":10,"nodeType":"327","messageId":"328","endLine":13,"endColumn":21},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"331","replacedBy":"335"},{"ruleId":"333","replacedBy":"336"},{"ruleId":"331","replacedBy":"337"},{"ruleId":"333","replacedBy":"338"},{"ruleId":"325","severity":1,"message":"339","line":1,"column":29,"nodeType":"327","messageId":"328","endLine":1,"endColumn":38},{"ruleId":"325","severity":1,"message":"340","line":23,"column":8,"nodeType":"327","messageId":"328","endLine":23,"endColumn":16},{"ruleId":"325","severity":1,"message":"341","line":29,"column":8,"nodeType":"327","messageId":"328","endLine":29,"endColumn":16},{"ruleId":"331","replacedBy":"342"},{"ruleId":"333","replacedBy":"343"},{"ruleId":"331","replacedBy":"344"},{"ruleId":"333","replacedBy":"345"},{"ruleId":"331","replacedBy":"346"},{"ruleId":"333","replacedBy":"347"},{"ruleId":"348","severity":1,"message":"349","line":146,"column":5,"nodeType":"350","endLine":146,"endColumn":7,"suggestions":"351"},{"ruleId":"331","replacedBy":"352"},{"ruleId":"333","replacedBy":"353"},{"ruleId":"331","replacedBy":"354"},{"ruleId":"333","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":92,"column":3,"nodeType":"358","messageId":"359","endLine":99,"endColumn":6},{"ruleId":"331","replacedBy":"360"},{"ruleId":"333","replacedBy":"361"},{"ruleId":"331","replacedBy":"362"},{"ruleId":"333","replacedBy":"363"},{"ruleId":"331","replacedBy":"364"},{"ruleId":"333","replacedBy":"365"},{"ruleId":"325","severity":1,"message":"366","line":9,"column":21,"nodeType":"327","messageId":"328","endLine":9,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":29,"column":26,"nodeType":"369","messageId":"370","endLine":29,"endColumn":28},{"ruleId":"331","replacedBy":"371"},{"ruleId":"333","replacedBy":"372"},{"ruleId":"331","replacedBy":"373"},{"ruleId":"333","replacedBy":"374"},{"ruleId":"331","replacedBy":"375"},{"ruleId":"333","replacedBy":"376"},{"ruleId":"331","replacedBy":"377"},{"ruleId":"333","replacedBy":"378"},{"ruleId":"331","replacedBy":"379"},{"ruleId":"333","replacedBy":"380"},{"ruleId":"325","severity":1,"message":"339","line":1,"column":29,"nodeType":"327","messageId":"328","endLine":1,"endColumn":38},{"ruleId":"325","severity":1,"message":"381","line":1,"column":48,"nodeType":"327","messageId":"328","endLine":1,"endColumn":56},{"ruleId":"331","replacedBy":"382"},{"ruleId":"333","replacedBy":"383"},{"ruleId":"348","severity":1,"message":"384","line":20,"column":5,"nodeType":"350","endLine":20,"endColumn":7,"suggestions":"385"},{"ruleId":"325","severity":1,"message":"386","line":7,"column":10,"nodeType":"327","messageId":"328","endLine":7,"endColumn":32},{"ruleId":"325","severity":1,"message":"366","line":13,"column":21,"nodeType":"327","messageId":"328","endLine":13,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":38,"column":29,"nodeType":"369","messageId":"370","endLine":38,"endColumn":31},{"ruleId":"387","severity":1,"message":"388","line":104,"column":23,"nodeType":"389","endLine":107,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":40,"column":29,"nodeType":"369","messageId":"370","endLine":40,"endColumn":31},{"ruleId":"387","severity":1,"message":"388","line":99,"column":23,"nodeType":"389","endLine":102,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":47,"column":29,"nodeType":"369","messageId":"370","endLine":47,"endColumn":31},{"ruleId":"387","severity":1,"message":"388","line":135,"column":23,"nodeType":"389","endLine":138,"endColumn":25},{"ruleId":"331","replacedBy":"390"},{"ruleId":"333","replacedBy":"391"},{"ruleId":"325","severity":1,"message":"381","line":1,"column":44,"nodeType":"327","messageId":"328","endLine":1,"endColumn":52},{"ruleId":"331","replacedBy":"392"},{"ruleId":"333","replacedBy":"393"},{"ruleId":"331","replacedBy":"394"},{"ruleId":"333","replacedBy":"395"},{"ruleId":"325","severity":1,"message":"339","line":1,"column":29,"nodeType":"327","messageId":"328","endLine":1,"endColumn":38},{"ruleId":"325","severity":1,"message":"381","line":1,"column":48,"nodeType":"327","messageId":"328","endLine":1,"endColumn":56},{"ruleId":"396","severity":1,"message":"397","line":23,"column":20,"nodeType":"398","messageId":"359","endLine":23,"endColumn":24},{"ruleId":"331","replacedBy":"399"},{"ruleId":"333","replacedBy":"400"},{"ruleId":"325","severity":1,"message":"339","line":1,"column":29,"nodeType":"327","messageId":"328","endLine":1,"endColumn":38},{"ruleId":"387","severity":1,"message":"388","line":112,"column":25,"nodeType":"389","endLine":115,"endColumn":27},{"ruleId":"387","severity":1,"message":"388","line":110,"column":25,"nodeType":"389","endLine":113,"endColumn":27},{"ruleId":"331","replacedBy":"401"},{"ruleId":"333","replacedBy":"402"},{"ruleId":"325","severity":1,"message":"403","line":8,"column":13,"nodeType":"327","messageId":"328","endLine":8,"endColumn":14},{"ruleId":"325","severity":1,"message":"366","line":15,"column":29,"nodeType":"327","messageId":"328","endLine":15,"endColumn":42},{"ruleId":"367","severity":1,"message":"368","line":33,"column":39,"nodeType":"369","messageId":"370","endLine":33,"endColumn":41},{"ruleId":"387","severity":1,"message":"388","line":89,"column":23,"nodeType":"389","endLine":92,"endColumn":25},{"ruleId":"404","severity":1,"message":"405","line":59,"column":11,"nodeType":"389","endLine":59,"endColumn":45},{"ruleId":"325","severity":1,"message":"339","line":1,"column":29,"nodeType":"327","messageId":"328","endLine":1,"endColumn":38},{"ruleId":"325","severity":1,"message":"381","line":1,"column":48,"nodeType":"327","messageId":"328","endLine":1,"endColumn":56},{"ruleId":"348","severity":1,"message":"406","line":19,"column":2,"nodeType":"327","endLine":19,"endColumn":11,"suggestions":"407"},"no-unused-vars","'ContactsContext' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'PublicRoute' is defined but never used.","no-native-reassign",["408"],"no-negated-in-lhs",["409"],["408"],["409"],["408"],["409"],"'useEffect' is defined but never used.","'location' is assigned a value but never used.","'showBack' is assigned a value but never used.",["408"],["409"],["408"],["409"],["408"],["409"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["410"],["408"],["409"],["408"],["409"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["408"],["409"],["408"],["409"],["408"],["409"],"'activeContact' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["408"],["409"],["408"],["409"],["408"],["409"],["408"],["409"],["408"],["409"],"'useState' is defined but never used.",["408"],["409"],"React Hook useCallback has a missing dependency: 'dispatchFiles'. Either include it or remove the dependency array.",["411"],"'scrollToBottomAnimated' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["408"],["409"],["408"],["409"],["408"],["409"],"no-eval","eval can be harmful.","CallExpression",["408"],["409"],["408"],["409"],"'R' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect contains a call to 'setContact'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [contacts, clientIdx] as a second argument to the useEffect Hook.",["412"],"no-global-assign","no-unsafe-negation",{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},"Update the dependencies array to be: [addToast]",{"range":"419","text":"420"},"Update the dependencies array to be: [dispatchFiles]",{"range":"421","text":"422"},"Add dependencies array: [contacts, clientIdx]",{"range":"423","text":"424"},[3636,3638],"[addToast]",[789,791],"[dispatchFiles]",[684,684],", [contacts, clientIdx]"]